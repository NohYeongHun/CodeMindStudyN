#include <iostream>
#include <vector>
using namespace std;
/*
로직
우선 1~10000까지의 수가 들어간 배열을 만든다.
1. int num[10000] ={1....10000};
생성자가 있는 수를 구별할 함수를 만든다. n이 존재하는수가 d(n)이다. 
즉 1~10000까지의 n을 넣었을 때 나오는 d(n)이 생성자가 존재하는 1~10000까지의 수중에 하나이다.

2. int d(int n){ //n=1~10000
    int t=n;
    int x[4];//자리수
    for(int i=0;i<4;i++){
        x[i]=n%10;
        n=n/10;
        t+=x[i];
    }
    
    return t;
}
3. 비교할 배열을 넣어준다. 
int num2[10001]={}; //생성자가 존재하는 인덱스 를 표시한다.  ex)존재 1 비 존재 0으로 초기화 되있음.
4 실제 비교
    // cout<<d(20);// 11 = 11 + 1 + 1
    for(int i=1; i<=10000;i++){
        num[i]=i;
        for(int j=0; j<i;j++){
            if(d(j)==num[i]){
            // cout<<"i have generator : "<<i<<"\n";
            num2[i]=1;
            }
        }
    }
    for(int i=1; i<=10000; i++){
        if(num2[i]!=1)
        cout<<i<<"\n";
    }
int num[10000]에 1~10000을 넣어준다. 
if(d(j)==num[i])면  //d(j)==i면 => i가 생성자가 있는 숫자면 i의 생성자가 j라면
비교할 배열인 num2[i]에 1을 넣어준다. => 해당하는 인덱스에 1을 넣어줌으로써 num2[]에 숫자를 채운다.
그리고
for(int i=1; i<=10000; i++)
    if(num2[i]!=1)
        cout<<i<<"\n"; 
==> num2[i]가 0이면 i값 출력 => 생성자가 없는 인덱스에는 0이 들어가 있으므로 0이 들어간 인덱스 번호를 출력한다.

d(n)은 자리 수를 비교해서 예시로 33으로 시작하면 33+3+3 = 39,
그 다음 수는 39 +3 +9 =51, 다음 수는 51 + 5 + 1 = 57

*/
/*문제
셀프 넘버는 1949년 인도 수학자 D.R. Kaprekar가 이름 붙였다. 
양의 정수 n에 대해서 d(n)을 n과 n의 각 자리수를 더하는 함수라고 
정의하자. 예를 들어, d(75) = 75+7+5 = 87이다.

양의 정수 n이 주어졌을 때, 이 수를 시작해서 
n, d(n), d(d(n)), d(d(d(n))), ...과 같은 무한 수열을 만들 수 있다. 

예를 들어, 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39이고,
 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57이다. 
 이런식으로 다음과 같은 수열을 만들 수 있다.

33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...

n을 d(n)의 생성자라고 한다. 
위의 수열에서 33은 39의 생성자이고, 39는 51의 생성자, 
51은 57의 생성자이다. 생성자가 한 개보다 많은 경우도 있다. 
예를 들어, 101은 생성자가 2개(91과 100) 있다. 

91 + 9 +1 = 101
100 + 1+ 0 + 0 = 101
96 + 9 + 6 =111

생성자가 없는 숫자를 셀프 넘버라고 한다.
 100보다 작은 셀프 넘버는 총 13개가 있다. 
 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97

10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는
 프로그램을 작성하시오.

 입력 없음.
 출력 
 10,000보다 
 작거나 같은 셀프 넘버를 한 줄에 하나씩 증가하는 순서로 출력한다.
*/
int num[10001];
int num2[10001]={}; //체크할 배열 생성이 됬으면 1로체크.
//체크할 배열이 0 인 얘들을 출력.
/*int text[] = {} 빈배열안에 
    for(i=0; i<10000;i++){
        if(num2[i]==0)
            i+1; => text[] ={} 중괄호안에 넣는다. // 스킬??
    }
*/
int d(int n);
int main(){
    // cout<<d(20);// 11 = 11 + 1 + 1
    for(int i=1; i<=10000;i++){
        num[i]=i;
        for(int j=0; j<i;j++){
            if(d(j)==num[i]){
            // cout<<"i have generator : "<<i<<"\n";
            num2[i]=1;
            }
        }
    }
    for(int i=1; i<=10000; i++){
        if(num2[i]!=1)
        cout<<i<<"\n";
    }
}

/* d(n)을 만족하는 n이 없는 숫자들을 구해라.
    if(!(d(i))
*/
// 생성자가 있는 숫자 구하는 방법
int d(int n){
    int t=n;
    int x[4];//자리수
    for(int i=0;i<4;i++){
        x[i]=n%10;
        n=n/10;
        t+=x[i];
    }
    
    return t;
}

/* 
다른 풀이
#include<stdio.h>
int main()
{
	int arr[10001] ={0};
	int i,j;
	for(i=1;i<10000;i++){
	j=i/1000 + (i/100%10) + (i/10%10) + (i%10) + i;
	if(j<10000)
	arr[j]++;
	}
	for(i=1;i<10000;i++){
	if(arr[i]==0)
	printf("%d\n",i);
	}
	return 0;
}
*/
